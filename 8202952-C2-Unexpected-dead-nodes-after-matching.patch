From 11a00ac42593c9338b9ec8779dd8c142d1492907 Mon Sep 17 00:00:00 2001
From: wangkun <wangkun49@huawei.com>
Date: Mon, 27 May 2019 21:41:37 +0000
Subject: [PATCH] 8202952:C2:Unexpected dead nodes after matching

Bug url: https://bugs.openjdk.java.net/browse/JDK-8202952

---
 hotspot/src/share/vm/opto/matcher.cpp | 1 +
 1 files changed, 1 insertion(+), 1 deletions(-)

diff --git a/hotspot/src/share/vm/opto/matcher.cpp b/hotspot/src/share/vm/opto/matcher.cpp
index ddd34e7503..6cc9e04e6c 100644
--- a/hotspot/src/share/vm/opto/matcher.cpp
+++ b/hotspot/src/share/vm/opto/matcher.cpp
@@ -2236,6 +2236,7 @@ void Matcher::find_shared( Node *n ) {
                 // AtomicAdd is not an addressing expression.
                 // Cheap to find it by looking for screwy base.
                 !adr->in(AddPNode::Base)->is_top() &&
+                LP64_ONLY( off->get_long() == (int) (off->get_long()) && ) // immL32
                 // Are there other uses besides address expressions?
                 !is_visited(adr) ) {
               address_visited.set(adr->_idx); // Flag as address_visited
-- 
2.19.0

